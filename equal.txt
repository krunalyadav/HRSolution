using System;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(String[] args)
        {
            long a, b, c, count = 0, n, mincount;
            string[] temp;
            long[] ary = new long[10000];
            int t = Convert.ToInt32(Console.ReadLine());
            for (int z = 0; z < t; z++)
            {
                n = Convert.ToInt32(Console.ReadLine());
                temp = Console.ReadLine().Split(' ');
                ary = Array.ConvertAll(temp, long.Parse);
                Array.Sort(ary);
                mincount = int.MaxValue;
                for (int j = 0; j <= 5; j++)
                {
                    count = 0;
                    for (int i = 1; i < n; i++)
                    {
                        ary[i] -= ary[0];
                        a = ary[i] / 5;
                        b = (ary[i] % 5) / 2;
                        c = ((ary[i] % 5) % 2) / 1;
                        count = count + a + b + c;
                    }
                    if (count < mincount) mincount = count;
                }
                Console.WriteLine(count);
            }

            Console.Read();
        }
    }
}

//https://www.hackerrank.com/challenges/equal



using System;

namespace ConsoleApp2
{
    public class Program
    {
        static void Main(string[] args)
        {
            int t = Convert.ToInt32(Console.ReadLine());
            int[] rem;
            string[] temp;
            int n;
            int count = 0;
            int min;
            int[] ary;
            for (int i = 0; i < t; i++)
            {
                n = Convert.ToInt32(Console.ReadLine());
                temp = Console.ReadLine().Split(' ');
                ary = Array.ConvertAll(temp, int.Parse);
                Array.Sort(ary);
                count = 0;
                rem = new int[1000];
                min = ary[0];
                for (int k = 1; k < n; k++)
                {
                    if (ary[k] != min)
                    {
                        count += getNoOfWays(min, ary[k], rem);
                    }
                }
                Console.WriteLine(count);
            }
            Console.Read();
        }

        static int getNoOfWays(int min, int n, int[] rem)
        {
            if (rem[n] != 0) return rem[n];
            int way = 0;
            if ((n - 5) == min || (n - 2) == min || (n - 1) == min)
            {
                rem[n] = 1;
                return 1;
            }
            else if ((n - 5) > min) way += getNoOfWays(min, n - 5, rem);
            else if ((n - 2) > min) way += getNoOfWays(min, n - 2, rem);
            else if ((n - 1) > min) way += getNoOfWays(min, n - 1, rem);
            way++;
            rem[n] = way;
            return rem[n];
        }
    }
}

//https://www.hackerrank.com/challenges/equal
